// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Helper from "./Helper.bs.js";
import * as Belt_Array from "../node_modules/rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "../node_modules/rescript/lib/es6/belt_Option.js";

function processInput(input) {
  return Belt_Array.map(Helper.Input.toLines(input), (function (line) {
                return Helper.ArrayExt.toIntArrExn(line.split(""));
              }));
}

function getAdjacentRisks(param, riskMap) {
  var y = param[1];
  var x = param[0];
  var adjacent = [
    [
      x,
      y - 1 | 0
    ],
    [
      x - 1 | 0,
      y
    ],
    [
      x + 1 | 0,
      y
    ],
    [
      x,
      y + 1 | 0
    ]
  ];
  return Belt_Array.keepMap(adjacent, (function (param) {
                var x$p = param[0];
                return Belt_Option.flatMap(Belt_Array.get(riskMap, param[1]), (function (row) {
                              return Belt_Array.get(row, x$p);
                            }));
              }));
}

function findCheapestPath(param, riskMap) {
  var row = Belt_Array.getExn(riskMap, param[1]);
  Belt_Array.getExn(row, param[0]);
  
}

function solve1(input) {
  var test = findCheapestPath([
        0,
        0
      ], input);
  console.log(test);
  
}

var data = Helper.Input.read("./src/data/input_day15.txt");

var ex1 = "1163751742\n1381373672\n2136511328\n3694931569\n7463417111\n1319128137\n1359912421\n3125421639\n1293138521\n2311944581";

var input = processInput(ex1);

solve1(input);

export {
  processInput ,
  getAdjacentRisks ,
  findCheapestPath ,
  solve1 ,
  data ,
  ex1 ,
  input ,
  
}
/* data Not a pure module */
