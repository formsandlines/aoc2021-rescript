// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Fs from "fs";
import * as Belt_Int from "../node_modules/rescript/lib/es6/belt_Int.js";
import * as Belt_Array from "../node_modules/rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "../node_modules/rescript/lib/es6/belt_Option.js";

function filterEmptyStr(strArr) {
  return Belt_Array.keep(strArr, (function (str) {
                return str !== "";
              }));
}

function toIntArrExn(strArr) {
  return Belt_Array.map(strArr, (function (nStr) {
                return Belt_Option.getExn(Belt_Int.fromString(nStr));
              }));
}

var ArrayExt = {
  filterEmptyStr: filterEmptyStr,
  toIntArrExn: toIntArrExn
};

function read(path) {
  return Fs.readFileSync(path, "utf8");
}

function toLines(str) {
  return filterEmptyStr(str.split("\n"));
}

var Input = {
  read: read,
  toLines: toLines
};

var cmp = (function(a,b) {
    if (a < b) { return -1; }
    else if (a > b) { return 1; }
    else { return 0; }
  });

var add = (function(x,y) { return x + y; });

function addInt(t, i) {
  return add(t, BigInt(i));
}

var mul = (function(x,y) { return x * y; });

function mulInt(t, i) {
  return mul(t, BigInt(i));
}

var eq = (function(x,y) { return x == y; });

var gr = (function(x,y) { return x > y; });

var sm = (function(x,y) { return x < y; });

var grEq = (function(x,y) { return x >= y; });

var smEq = (function(x,y) { return x <= y; });

var zero = 0n;

var one = 1n;

var $$BigInt$1 = {
  cmp: cmp,
  add: add,
  addInt: addInt,
  mul: mul,
  mulInt: mulInt,
  eq: eq,
  gr: gr,
  sm: sm,
  grEq: grEq,
  smEq: smEq,
  zero: zero,
  one: one
};

export {
  ArrayExt ,
  Input ,
  $$BigInt$1 as $$BigInt,
  
}
/* fs Not a pure module */
