// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Fs from "fs";
import * as Belt_Int from "../node_modules/rescript/lib/es6/belt_Int.js";
import * as Belt_Array from "../node_modules/rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "../node_modules/rescript/lib/es6/belt_Option.js";

var raw = Fs.readFileSync("./src/data/input_day1.txt", "utf8");

var data = Belt_Array.mapU(Belt_Array.keep(raw.split("\n"), (function (str) {
            return str !== "";
          })), (function (str) {
        return Belt_Option.getExn(Belt_Int.fromString(str));
      }));

var increases = Belt_Array.keepWithIndexU(data, (function (n, i) {
        var nPrev = Belt_Array.get(data, i - 1 | 0);
        if (nPrev !== undefined) {
          return n > nPrev;
        } else {
          return false;
        }
      }));

var incrCount = increases.length;

console.log("Part 1: ", increases, incrCount);

var sum = {
  contents: 999999
};

var increases$1 = Belt_Array.keepWithIndexU(data, (function (n1, i) {
        var match = Belt_Array.get(data, i + 1 | 0);
        var match$1 = Belt_Array.get(data, i + 2 | 0);
        if (match === undefined) {
          return false;
        }
        if (match$1 === undefined) {
          return false;
        }
        var prevSum = sum.contents;
        sum.contents = (n1 + match | 0) + match$1 | 0;
        return sum.contents > prevSum;
      }));

var incrCount$1 = increases$1.length;

console.log("Part 2: ", increases$1, incrCount$1);

var sample = "199\n200\n208\n210\n200\n207\n240\n269\n260\n263";

export {
  raw ,
  sample ,
  data ,
  sum ,
  increases$1 as increases,
  incrCount$1 as incrCount,
  
}
/* raw Not a pure module */
